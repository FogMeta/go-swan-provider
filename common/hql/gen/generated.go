// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package gen

import (
	"context"
	"swan-provider/common/hql"

	"github.com/Khan/genqlient/graphql"
)

// DealDeal includes the requested fields of the GraphQL type Deal.
type DealDeal struct {
	ID                string          `json:"ID"`
	ProviderAddress   string          `json:"ProviderAddress"`
	PieceCid          string          `json:"PieceCid"`
	IsVerified        bool            `json:"IsVerified"`
	SignedProposalCid string          `json:"SignedProposalCid"`
	InboundFilePath   string          `json:"InboundFilePath"`
	ChainDealID       hql.ChainDealID `json:"ChainDealID"`
	Checkpoint        string          `json:"Checkpoint"`
	Err               string          `json:"Err"`
	Message           string          `json:"Message"`
}

// GetID returns DealDeal.ID, and is useful for accessing the field via an interface.
func (v *DealDeal) GetID() string { return v.ID }

// GetProviderAddress returns DealDeal.ProviderAddress, and is useful for accessing the field via an interface.
func (v *DealDeal) GetProviderAddress() string { return v.ProviderAddress }

// GetPieceCid returns DealDeal.PieceCid, and is useful for accessing the field via an interface.
func (v *DealDeal) GetPieceCid() string { return v.PieceCid }

// GetIsVerified returns DealDeal.IsVerified, and is useful for accessing the field via an interface.
func (v *DealDeal) GetIsVerified() bool { return v.IsVerified }

// GetSignedProposalCid returns DealDeal.SignedProposalCid, and is useful for accessing the field via an interface.
func (v *DealDeal) GetSignedProposalCid() string { return v.SignedProposalCid }

// GetInboundFilePath returns DealDeal.InboundFilePath, and is useful for accessing the field via an interface.
func (v *DealDeal) GetInboundFilePath() string { return v.InboundFilePath }

// GetChainDealID returns DealDeal.ChainDealID, and is useful for accessing the field via an interface.
func (v *DealDeal) GetChainDealID() hql.ChainDealID { return v.ChainDealID }

// GetCheckpoint returns DealDeal.Checkpoint, and is useful for accessing the field via an interface.
func (v *DealDeal) GetCheckpoint() string { return v.Checkpoint }

// GetErr returns DealDeal.Err, and is useful for accessing the field via an interface.
func (v *DealDeal) GetErr() string { return v.Err }

// GetMessage returns DealDeal.Message, and is useful for accessing the field via an interface.
func (v *DealDeal) GetMessage() string { return v.Message }

// DealResponse is returned by Deal on success.
type DealResponse struct {
	// Get Deal by ID
	Deal DealDeal `json:"deal"`
}

// GetDeal returns DealResponse.Deal, and is useful for accessing the field via an interface.
func (v *DealResponse) GetDeal() DealDeal { return v.Deal }

// __DealInput is used internally by genqlient
type __DealInput struct {
	Uuid string `json:"uuid"`
}

// GetUuid returns __DealInput.Uuid, and is useful for accessing the field via an interface.
func (v *__DealInput) GetUuid() string { return v.Uuid }

func Deal(
	ctx context.Context,
	client graphql.Client,
	uuid string,
) (*DealResponse, error) {
	req := &graphql.Request{
		OpName: "Deal",
		Query: `
query Deal ($uuid: ID!) {
	deal(id: $uuid) {
		ID
		ProviderAddress
		PieceCid
		IsVerified
		SignedProposalCid
		InboundFilePath
		ChainDealID
		Checkpoint
		Err
		Message
	}
}
`,
		Variables: &__DealInput{
			Uuid: uuid,
		},
	}
	var err error

	var data DealResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}
